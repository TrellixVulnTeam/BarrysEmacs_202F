<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
 
<HTML>
 
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1"> 
<TITLE>User Guide - Basic Editing</TITLE>
<LINK REL="STYLESHEET" HREF="styles.css"> 
</HEAD>

<BODY>
 
<H1><A NAME="top"></A>Basic Editing</H1>
<P>This chapter describes basic Emacs functions that allow you to enter text, make corrections, and save the text in a file. </P>
 
<UL>
<LI><A HREF="#theorganisationofthescreen">The Organisation of the Screen</A> describes the organisation of the Emacs screen.</LI>
</UL>
 
<UL>
<LI><A HREF="#selfdocumentationcommands">Self-Documentation Commands</A> describes Emacs' self-documentation features.</LI>
</UL>
 
<UL>
<LI><A HREF="#basiceditingkeyboardcommands">Basic Editing Commands</A> describes the basic editing commands.</LI>
</UL>
 
<UL>
<LI><A HREF="#commandprefixarguments">Command Prefix Arguments</A> shows how to prefix Emacs commands with numerical arguments.</LI>
</UL>
 
<UL>
<LI><A HREF="#files">Files</A> describes Emacs basic file handling commands.</LI>
</UL>
<HR>
 
<H2><A NAME="theorganisationofthescreen"></A>The Organisation of the Screen</H2>
 
<P ALIGN="center"><IMG SRC="ug_screen.gif" USEMAP="#screen" BORDER="0" WIDTH="606" HEIGHT="297"></P>
<MAP NAME="screen">
<AREA SHAPE="rect" COORDS="5,22,548,42" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Menus'; return true"> 
<AREA SHAPE="rect" COORDS="5,43,224,72" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Toolbar'; return true"> 
<AREA SHAPE="rect" COORDS="219,118,227,133" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Text cursor'; return true"> 
<AREA SHAPE="rect" COORDS="5,74,574,239" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Text area'; return true"> 
<AREA SHAPE="rect" COORDS="5,240,504,255" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Mode line'; return true"> 
<AREA SHAPE="rect" COORDS="5,256,574,273" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Minibuffer'; return true"> 
<AREA SHAPE="rect" COORDS="584,88,599,224" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Vertical Scroll bar'; return true"> 
<AREA SHAPE="rect" COORDS="505,238,582,254" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Horizontal Scroll bar'; return true"> 
<AREA SHAPE="rect" COORDS="5,274,418,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Status bar'; return true"> 
<AREA SHAPE="rect" COORDS="419,274,445,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Caps lock indicator'; return true"> 
<AREA SHAPE="rect" COORDS="446,274,476,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Overstrike indicator'; return true"> 
<AREA SHAPE="rect" COORDS="477,274,514,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Readonly buffer indicator'; return true"> 
<AREA SHAPE="rect" COORDS="515,274,557,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Line number'; return true"> 
<AREA SHAPE="rect" COORDS="558,274,585,292" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status='Column'; return true"> 
<AREA SHAPE="rect" COORDS="0,0,605,296" HREF="#theorganisationofthescreen" ONMOUSEOVER="self.status=' '; return true;"> 
</MAP>
<CENTER>
Figure 1. <I>The Emacs screen</I>
</CENTER>
 
<P>The Emacs screen is shown in <I>Figure 1</I>. Moving the mouse pointer over the figure will display the name of the parts of the screen in the browser status line.</P>
 
<P>Emacs divides the screen into several areas, each of which contains its own kind of information. The biggest area is the one in which you usually see the text you are editing. The cursor usually appears in the middle of the text, showing the position of dot, the location at which editing takes place. The cursor is a vertical line by default. In <I>Figure 1</I> the cursor can be seen at end of the word &quot;me&quot; and before &quot;electronically&quot;.</P>
 
<P>The line between the modeline and the status bar on the screen is called the Mini-buffer. This area is used to display messages and error text when a command is incorrectly used. It is also used to collect arguments for commands that require them when they are executed interactively. Normal editing commands can be used in the Mini-buffer. <BR>
</P>
<HR>
 
<H3><A NAME="windows"></A>Windows</H3>
<P>The main area of the screen may be divided up into a number of windows, as shown in <I>Figure 2</I>. A window is associated with a buffer which will contain the contents of a file.</P>

<CENTER>
<IMG SRC="ug_windows.gif" BORDER="1" WIDTH="594" HEIGHT="199">
</CENTER>
<CENTER>
Figure 2. <I>Emacs with three windows.</I>
</CENTER>
 
<P>Commands exist to change the association of windows to buffers and to change the number of windows displayed on the screen.</P>
 
<P>A window must be at least two lines deep and at least two columns wide. You can therefore display a lot of windows on the screen at any one time. The variable <FONT FACE="Courier New" SIZE="-1">split-height-threshold</FONT> controls the size of windows that may be divided, and therefore controls the minimum number of windows on the screen.</P>
<HR>
 
<H3><A NAME="modelines"></A>Mode Lines</H3>

<P>The line at the bottom of each window is known as the window's Mode Line. It is the line that usually starts with <FONT FACE="Courier New" SIZE="-1">Buffer</FONT> and is displayed with a blue background. Its purpose is to tell you information that may affect the meaning of your commands aside from the text itself. </P>
 
<P>Some Emacs commands read and process other commands. They are known as subsystems and may initiate recursive editing levels. If you are inside a subsystem or a recursive editing level, the mode line tells you its name. Square brackets around the mode line indicate the depth of recursive editing levels.</P>
 
<P>Subsystems and recursive editing levels are advanced features, and you will not initially be using them. When you are not inside a subsystem or recursive editing level, we say that you are at the top level; this implies that the characters you type are interpreted as ordinary Emacs commands. When you are at top level, the mode line tells you what file you are editing, where you are in it, and what editing modes are enabled which may affect the meaning of your commands.</P>
 
<P>The format of the default mode line is shown in <I>Figure 3</I>. The figure will display the names of the parts of mode line in the browser status line. Clicking on parts of the figure will take you to the description of that part of the mode line.</P>
 
<P ALIGN="center"><IMG USEMAP="#modeline" SRC="ug_modeline.gif" BORDER="0" WIDTH="542" HEIGHT="17"></P>
<CENTER>
Figure 3. <I>Default mode line format.</I>
</CENTER>
<MAP NAME="modeline">
<AREA SHAPE="rect" COORDS="0,0,9,16" HREF="#modeline_recursion" ONMOUSEOVER="self.status='Recursion depth'; return true"> 
<AREA SHAPE="rect" COORDS="10,0,59,16" HREF="#modeline_hscroll" ONMOUSEOVER="self.status='Horizontal scroll'; return true"> 
<AREA SHAPE="rect" COORDS="134,0,164,16" HREF="#modeline_buffer" ONMOUSEOVER="self.status='Buffer name'; return true"> 
<AREA SHAPE="rect" COORDS="232,0,307,16" HREF="#modeline_filename" ONMOUSEOVER="self.status='Filename'; return true"> 
<AREA SHAPE="rect" COORDS="315,0,371,16" HREF="#modeline_subsys" ONMOUSEOVER="self.status='Subsystem'; return true"> 
<AREA SHAPE="rect" COORDS="387,0,434,16" HREF="#modeline_major" ONMOUSEOVER="self.status='Major mode'; return true"> 
<AREA SHAPE="rect" COORDS="439,0,487,16" HREF="#modeline_minor" ONMOUSEOVER="self.status='Minor mode'; return true"> 
<AREA SHAPE="rect" COORDS="502,0,530,16" HREF="#modeline_position" ONMOUSEOVER="self.status='Position'; return true"> 
<AREA SHAPE="rect" COORDS="531,0,540,16" HREF="#modeline_recursion" ONMOUSEOVER="self.status='Recursion depth'; return true"> 
</MAP>
 
<P>The components of the mode line are:</P>
 
<P><A NAME="modeline_major"></A><I>major</I> <BR>
The name of the major mode you are in. At any time, Emacs is in one and only one of its possible major modes. The major modes available include Normal (in which buffers are created), Text, Lisp, Pascal, and others.</P>
 
<P><A NAME="modeline_minor"></A><I>minor</I> <BR>
A list of some of the minor modes that are enabled. Journal means that journalling is enabled for this buffer. Checkpoint means that check pointing is enabled for this buffer and generally for all buffers. Overstrike means that character replace mode is switched on so that characters that you type replace the characters that exist in the buffer already. Abbrev means that abbreviation mode is on and that abbreviations are automatically expanded. Readonly means that you cannot alter the contents of the buffer.</P>
 
<P><A NAME="modeline_buffer"></A><I>bfr</I> <BR>
The name of the buffer currently associated with the window. Each buffer has its own name and may hold a file being edited; this is how Emacs holds several files at once. At any time you can edit only one buffer, the current buffer, though you may have many files open within Emacs.</P>
 
<P><A NAME="modeline_filename"></A><I>File</I> <BR>
The name of the file that you are editing. It is the last file that was visited in the associated buffer. If the buffer does not contain the contents of a file, then <FONT FACE="Courier New" SIZE="-1">[No File]</FONT> is displayed. Buffers of this type are called scratch buffers.</P>
 
<P><A NAME="modeline_modified"></A><I>*</I> <BR>
Indicates that there are unsaved changes in the buffer. If the buffer has not changed since it was read in or saved, no asterisk is displayed.</P>
 
<P><A NAME="modeline_position"></A><I>pos</I> <BR>
Tells you whether there is additional text above the top of the screen, or below the bottom. It is <FONT FACE="Courier New" SIZE="-1">Top</FONT> if you are looking at the beginning of the file, <FONT FACE="Courier New" SIZE="-1">Bottom</FONT> if you are looking at the end of the file, or <FONT FACE="Courier New" SIZE="-1">nn%</FONT> where <FONT FACE="Courier New" SIZE="-1">nn</FONT> is the percentage of the file above dot.</P>
 
<P><A NAME="modeline_subsys"></A><I>subsys</I> <BR>
The name of the currently running subsystem. By default, this is blank.</P>
 
<P><A NAME="modeline_recursion"></A><I>[</I> <BR>
Square brackets in the mode line indicate the current recursive edit depth. When the recursion depth is zero, square brackets are not displayed. When the recursion depth is less than five, recursion-depth number of square brackets are included in the mode line. When the recursion depth is greater than five, the depth is indicated by <FONT FACE="Courier New" SIZE="-1">[n[</FONT> and <FONT FACE="Courier New" SIZE="-1">]n]</FONT>, where <FONT FACE="Courier New" SIZE="-1">n</FONT> is the recursion depth.</P>
 
<P><A NAME="modeline_hscroll"></A><I>&lt;</I> <BR>
A marker indicating that the buffer is horizontally scrolled left by the indicated number of characters. When no left-scrolling is being used, the indicator is not included in the mode line. Otherwise, <FONT FACE="Courier New" SIZE="-1">&lt;n&lt;</FONT> is displayed, where <FONT FACE="Courier New" SIZE="-1">n</FONT> is the number of characters by which the screen is scrolled to the left. <BR>
</P>
<HR>
 
<H2><A NAME="selfdocumentationcommands"></A>Self-Documentation Commands</H2>

<P>Emacs provides extensive self-documentation features which are invoked by a single character, called the <FONT FACE="Courier New" SIZE="-1">Help</FONT> character. At any time while using Emacs, you can type the <FONT FACE="Courier New" SIZE="-1">Help</FONT> character to ask for help. The <FONT FACE="Courier New" SIZE="-1">Help</FONT> character is actually typed as <FONT FACE="Courier New" SIZE="-1">^_</FONT> (control-shift-underscore). </P>
 
<P>If you type the <FONT FACE="Courier New" SIZE="-1">Help</FONT> character while you are using a subsystem (such as INFO), Emacs may print a list of the commands available in that subsystem. However, it is up to the subsystem to provide this facility.</P>
 
<P>The Emacs Help facility offers several options for asking about the commands that exist and what the commands do. It prompts with <FONT FACE="Courier New" SIZE="-1">Doc (? for help):</FONT> at the bottom of the screen, and you type a character to say what kind of help you want. You could type <FONT FACE="Courier New" SIZE="-1">Help</FONT> or <FONT FACE="Courier New" SIZE="-1">?</FONT> at this point to find out what options are available. The available options are listed in Table 1.</P>
 
<TABLE BORDER="1">
<CAPTION><B>Help Options</B>
</CAPTION> 
 
<TR>
<TH ALIGN="LEFT">Description</TH>
<TH ALIGN="CENTER">Option</TH>
</TR>
 
<TR>
<TD>Show command containing a string (apropos)</TD>
<TD ALIGN="CENTER">a</TD>
</TR>
 
<TR>
<TD>Describe all key bindings</TD>
<TD ALIGN="CENTER">b</TD>
</TR>
 
<TR>
<TD>LK201 compose key sequence chart</TD>
<TD ALIGN="CENTER">c</TD>
</TR>
 
<TR>
<TD>Describe a command</TD>
<TD ALIGN="CENTER">d</TD>
</TR>
 
<TR>
<TD>Describe a key binding</TD>
<TD ALIGN="CENTER">k</TD>
</TR>
 
<TR>
<TD>Describe a variable</TD>
<TD ALIGN="CENTER">v</TD>
</TR>
 
<TR>
<TD>Find a function on the keyboard</TD>
<TD ALIGN="CENTER">w</TD>
</TR>
</TABLE>
 
<P>The most basic Help options are <FONT FACE="Courier New" SIZE="-1">Help v</FONT> and <FONT FACE="Courier New" SIZE="-1">Help d</FONT>. You can use them to ask what a particular command or variable does. <FONT FACE="Courier New" SIZE="-1">Help d</FONT> is for asking about functions (or extended commands); type the name of the function and a <FONT FACE="Courier New" SIZE="-1">Return</FONT>. Thus, <FONT FACE="Courier New" SIZE="-1">Help d lisp-mode</FONT> tells you about <FONT FACE="Courier New" SIZE="-1">ESC-x lisp-mode</FONT>. <FONT FACE="Courier New" SIZE="-1">Help v</FONT> tells you about variables in the same way. <I>d</I> stands for <I>describe</I>, since <FONT FACE="Courier New" SIZE="-1">Help d</FONT> actually uses the function <FONT FACE="Courier New" SIZE="-1">describe-command</FONT> to do the work.</P>
 
<P>A more complicated question to ask is, What are the commands or variables for manipulating something?. For this, you use the <FONT FACE="Courier New" SIZE="-1">Help a</FONT> command. This command prints a list of all the functions and variables that have the word you specified anywhere in their name. The <FONT FACE="Courier New" SIZE="-1">a</FONT> stands for &quot;apropos&quot;, since <FONT FACE="Courier New" SIZE="-1">Help a</FONT> actually uses the functions <FONT FACE="Courier New" SIZE="-1">apropos</FONT> and <FONT FACE="Courier New" SIZE="-1">apropos-variable</FONT> to do the sub string matching.</P>
 
<P>Help a also tells you what keys are bound to the commands, if any. For example, it would say that you can invoke <FONT FACE="Courier New" SIZE="-1">write-modified-files</FONT> by typing <FONT FACE="Courier New" SIZE="-1">^X-^M</FONT>.</P>
 
<P>Since the apropos functions look only for functions and variables whose names contain the string you specify, you must use ingenuity in choosing strings. If you are looking for commands for deleting backwards, and <FONT FACE="Courier New" SIZE="-1">Help a delete-backwards</FONT> does not reveal any, do not give up. Try <FONT FACE="Courier New" SIZE="-1">delete</FONT>, or <FONT FACE="Courier New" SIZE="-1">backwards</FONT>, or just <FONT FACE="Courier New" SIZE="-1">back</FONT>. Be persistent.</P>
 
<P>Table 2 contains a set of apropos strings that cover many classes of Emacs commands, since there are strong conventions for naming the standard Emacs commands. By giving you a feel for the Emacs naming conventions, this set should help you to develop a technique</P>
 
<TABLE BORDER="1">
<CAPTION><B>Apropos Strings</B>
</CAPTION> 
 
<TR>
<TD>character</TD>
<TD>line</TD>
<TD>word</TD>
<TD>sentence</TD>
<TD>paragraph</TD>
</TR>
 
<TR>
<TD>region</TD>
<TD>buffer</TD>
<TD>screen</TD>
<TD>window</TD>
<TD>bound</TD>
</TR>
 
<TR>
<TD>binding</TD>
<TD>file</TD>
<TD>beginning</TD>
<TD>end</TD>
<TD>case</TD>
</TR>
 
<TR>
<TD>mode</TD>
<TD>forward</TD>
<TD>backward</TD>
<TD>next</TD>
<TD>previous</TD>
</TR>
 
<TR>
<TD>up</TD>
<TD>down</TD>
<TD>search</TD>
<TD>kill</TD>
<TD>delete</TD>
</TR>
 
<TR>
<TD>mark</TD>
<TD>fill</TD>
<TD>indent</TD>
<TD>UI</TD>
<TD>syntax</TD>
</TR>
</TABLE>
<HR>
 
<H2><A NAME="basiceditingkeyboardcommands"></A>Basic Editing Keyboard Commands</H2>
<P>This section describes the basic text editing features of Emacs. It shows how to insert and erase text and how to move the cursor around the screen. </P>
 
<H3>Inserting Text</H3>
<P>To insert printing characters into the text you are editing, just type them. </P>
 
<P>To delete text you have just inserted, you can use the <FONT FACE="Courier New" SIZE="-1">Backspace</FONT> key. <FONT FACE="Courier New" SIZE="-1">Backspace</FONT> deletes the character before the cursor. The cursor and all characters after it move backwards. Therefore, if you type a printing character and then type <FONT FACE="Courier New" SIZE="-1">Backspace</FONT>, they cancel out.</P>
 
<P>To end a line and start typing a new line, press the <FONT FACE="Courier New" SIZE="-1">Return</FONT> key. <FONT FACE="Courier New" SIZE="-1">Return</FONT> operates by inserting a line separator, so if you type <FONT FACE="Courier New" SIZE="-1">Return</FONT> in the middle of a line, you break the line in two.</P>
 
<P>If the <FONT FACE="Courier New" SIZE="-1">wrap-long-lines</FONT> variable is set, and you add too many characters to one line without breaking it with a <FONT FACE="Courier New" SIZE="-1">Return</FONT>, the line grows to occupy two or more lines on the screen, with a <FONT FACE="Courier New" SIZE="-1">&gt;=</FONT> at the extreme right margin of all but the last line. The <FONT FACE="Courier New" SIZE="-1">&gt;=</FONT> means that the following screen line is not really a distinct line in the file, but just the continuation of a line too long to fit on the screen.</P>
 
<P>If the <FONT FACE="Courier New" SIZE="-1">wrap-long-lines</FONT> variable is not set, a diamond is displayed at the end of each line that is longer than the screen.</P>
 
<P>Direct insertion works for printing and layout characters, but other characters act as editing commands and do not insert themselves. If you need to insert a control character you must quote it by using the <FONT FACE="Courier New" SIZE="-1">^q</FONT> (<FONT FACE="Courier New" SIZE="-1">quote-character</FONT>) command first.</P>
 
<H3>Moving the Cursor</H3>
<P>To do more than insert characters, you have to know how to move the cursor. Here are a few of the commands for doing this: </P>
 
<TABLE BORDER="1">
 
<TR>
<TD>Move to the beginning of the current line.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^A or Home (beginning-of-line)</FONT></TD>
</TR>
 
<TR>
<TD>Move to the end of the current line.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^E or End (end-of-line)</FONT></TD>
</TR>
 
<TR>
<TD>Move forward one character.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^F or Right-arrow (forward-character)</FONT></TD>
</TR>
 
<TR>
<TD>Move backward one character.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^B or Left-arrow (backward-character)</FONT></TD>
</TR>
 
<TR>
<TD>Move down one line, vertically.&nbsp; <BR>
If you start in the middle of one line,&nbsp; <BR>
you end up in the middle of the next line.</TD>
<TD VALIGN="TOP"><FONT FACE="Courier New" SIZE="-1">^N or Down-arrow (next-line)</FONT></TD>
</TR>
 
<TR>
<TD>Move up one line, vertically.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^P or Up-arrow (previous-line)</FONT></TD>
</TR>
 
<TR>
<TD>Clear and redraw the display.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^L (redraw-display)</FONT></TD>
</TR>
 
<TR>
<TD>Transpose the last two characters.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^T (transpose-characters)</FONT></TD>
</TR>
 
<TR>
<TD>Move to the top of the file.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">ESC-&lt; (beginning-of-file)</FONT></TD>
</TR>
 
<TR>
<TD>Move to the end of the file.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">ESC-&gt; (end-of-file)</FONT></TD>
</TR>
</TABLE>
 
<H3>Erasing Text</H3>
 
<TABLE BORDER="1">
 
<TR>
<TD>Delete the character before the cursor.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">Backspace (delete-previous-character)</FONT></TD>
</TR>
 
<TR>
<TD>Delete the character after the cursor.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^D or Delete (delete-next-character)</FONT></TD>
</TR>
 
<TR>
<TD>Delete to the end of the current line.</TD>
<TD><FONT FACE="Courier New" SIZE="-1">^K (kill-to-end-of-line)</FONT></TD>
</TR>
</TABLE>
 
<P>You already know about the <FONT FACE="Courier New" SIZE="-1">Backspace</FONT> command, which deletes the character before the cursor. Another command, <FONT FACE="Courier New" SIZE="-1">^D</FONT>, deletes the character after the cursor, causing the rest of the text on the line to shift left. If <FONT FACE="Courier New" SIZE="-1">^D</FONT> is typed at the end of a line, that line and the next line are joined together. </P>
<HR>
 
<H2><A NAME="basiceditingmousecommands"></A>Basic Editing Mouse Commands</H2>

<P>The default actions of the mouse follow the normal windows conventions. The following sections give details of the actions. </P>
 
<H3>Moving the cursor</H3>
 
<P>The cursor can be positioned by clicking once with the left mouse button. If you click in the mode line of a window that window is selected and the cursor is left where you where last editing. If you click inside the windows text area the cursor is positioned between the nearest two characters. </P>
 
<H3>Selecting text</H3>
 
<P>To select a block of text with the mouse use the left mouse button. </P>
 
<P>Start selecting text by pressing the mouse button then dragging it over the text to be selected. Release the mouse button when the right text is selected.</P>
 
<P>A single click will cancel any selection and position the cursor.</P>
 
<P>A single click and drag will select text a character at a time.</P>
 
<P>A double click selects one word.</P>
 
<P>A double click and drag will select text a word at a time.</P>
 
<P>A triple click selects one line.</P>
 
<P>A triple click and drag will select text a line at a time.</P>
 
<H3>Dragging the selection</H3>
 
<P>The mouse can be used to drag the selected text to a new location.</P>
 
<P>Press the mouse button inside the selection and drag the mouse to the new position for the text. If you release the mouse button inside the selection it will not be moved.</P>
 
<H3>Arranging windows</H3>
 
<P>If there are more then one window on the screen the mouse can be used to resize the windows.</P>
 
<P>Press the left mouse button in the mode line of a window and drag the mode line to resize the window.</P>
 
<P>If you drag the mode line so that the window is less then one line high the window is deleted. <BR>
</P>
<HR>
 
<H2><A NAME="commandprefixarguments"></A>Command Prefix Arguments</H2>
 
<P>Any Emacs command can be given a numeric argument. Some commands interpret the argument as a repetition count. For example, giving an argument of 10 to the <FONT FACE="Courier New" SIZE="-1">^F</FONT> command (move forward one character) moves forward 10 characters. With these commands, specifying no argument is equivalent to providing an argument of 1.</P>
 
<P>Some commands care only about whether there is an argument, and not about its value; for example, the command <FONT FACE="Courier New" SIZE="-1">^X-^D</FONT>(<FONT FACE="Courier New" SIZE="-1">describe-word-in-buffer</FONT>) attempts to tell you about the word in which dot is located. If you provide a prefix argument, it allows you to alter the definition for the word using a recursive edit.</P>
 
<P>The fundamental way of specifying an argument is to use the <FONT FACE="Courier New" SIZE="-1">^U</FONT>(<FONT FACE="Courier New" SIZE="-1">argument-prefix</FONT>) command followed by the digits of the argument. Negative arguments are allowed -- they often tell a command to move or act backwards. A negative argument is entered with <FONT FACE="Courier New" SIZE="-1">^U</FONT> followed by a minus sign and the digits of the argument value.</P>
 
<P>^U followed by a character that is neither a digit nor a minus sign has the special meaning of multiply by four. It multiplies the argument for the next command by four. Two such <FONT FACE="Courier New" SIZE="-1">^U</FONT>s multiply it by sixteen. Thus, <FONT FACE="Courier New" SIZE="-1">^U-^U-^F</FONT> moves forward sixteen characters. This is a good way to move forward quickly, since it moves about a quarter of a line on most terminals. Other useful combinations are <FONT FACE="Courier New" SIZE="-1">^U-^N</FONT> and <FONT FACE="Courier New" SIZE="-1">^U-^U-^N</FONT> which move down useful fractions of a screen.</P>
 
<P>There are other terminal-dependent ways of specifying arguments. They have the same effect as typing <FONT FACE="Courier New" SIZE="-1">^U</FONT>, but may be easier to type. If your terminal has a numeric keypad which sends something recognisably different from the ordinary digits, it is possible to customise Emacs to allow use of the numeric keypad for specifying arguments.</P>
 
<H3>Autoarg Mode</H3>
 
<P>Autoarg-mode allows you to specify prefix arguments without using <FONT FACE="Courier New" SIZE="-1">^U</FONT>. Instead, you type just the digits of the argument. Typing digits followed by an ordinary inserting character causes the digits themselves to be inserted, but digits followed by a command character serve as an argument to the command and are not inserted. A minus sign can also be part of an argument, but only at the beginning. If you type a minus sign following some digits, both the digits and the minus sign are inserted.</P>
 
<P>To use Autoarg Mode, type the command <FONT FACE="Courier New" SIZE="-1">ESC-x auto-arg-mode</FONT>.</P>
 
<P>Auto-argument digits echo at the bottom of the screen; the first non-digit character causes the accumulated digits to be inserted or used as an argument. To insert some digits and nothing else, you must follow the digits with a <FONT FACE="Courier New" SIZE="-1">Space</FONT>, then delete the space character. <FONT FACE="Courier New" SIZE="-1">^G</FONT> cancels the digits. <BR>
</P>
<HR>
 
<H2><A NAME="files"></A>Files</H2>
 
<P>To keep any text permanently you must store it in a file. To tell Emacs to edit text in a file, choose a filename and use the <FONT FACE="Courier New" SIZE="-1">^X-^V</FONT> command. This visits the specified file so that its contents appear on the screen in a new buffer and window. You can make changes, and then save the file by typing <FONT FACE="Courier New" SIZE="-1">^X-^s</FONT>. This makes the changes permanent and creates a new version of the file. Note that, until you save changes to the file, the changes are only inside your Emacs; the file itself is not really changed.</P>
 
<P>If the file does not exist and you want to create it, just visit it as if it did exist. When you save your text with <FONT FACE="Courier New" SIZE="-1">^X-^S</FONT>, Emacs will create the file.</P>
 
<P>See Advanced File Handling for more information on handling files. <BR>
</P>
<HR>
</BODY>
</HTML>

